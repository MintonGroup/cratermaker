name: deploy_cratermaker

on:
  workflow_dispatch:
  release:
    types:
      - published

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-13, macos-14, macos-15, windows-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Get history and tags for SCM versioning to work
        run: |
          git fetch --prune --unshallow
          git fetch --depth=1 origin +refs/tags/*:refs/tags/*

      - uses: actions/setup-python@v5
        with:
          python-version: '>=3.10'

      - name: Set version
        shell: bash
        run: |
          pip install setuptools_scm
          python -c "import setuptools_scm; v = setuptools_scm.get_version(); open('cratermaker/_version.py', 'w').write(f'__version__ = version = \"{v}\"\n')"
          python buildscripts/set_version.py

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
          manylinux: auto

      - name: pytest
        shell: bash
        run: |
          set -e
          python3 -m venv .venv
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            source .venv/Scripts/activate
          else
            source .venv/bin/activate
          fi
          pip install cratermaker --find-links dist --force-reinstall
          pip install pytest
          pytest

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: dist/*.whl
          retention-days: 1

      - name: Build documentation 
        if: matrix.os == 'ubuntu-latest'
        working-directory: docs
        run: |
          source ../.venv/bin/activate
          pip install -r ../environments/requirements-docdev.txt 
          make clean
          make rtdhtml

      - name: Upload documentation artifact
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: documentation-html
          path: docs/_build
          retention-days: 1

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Get history and tags for SCM versioning to work
        run: |
          git fetch --prune --unshallow
          git fetch --depth=1 origin +refs/tags/*:refs/tags/*

      - uses: actions/setup-python@v5
        with:
          python-version: '>=3.10'

      - name: Set version
        shell: bash
        run: |
          pip install setuptools_scm
          python buildscripts/set_version.py

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz              
          retention-days: 1 

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment: 
      name: pypi
      url: https://pypi.org/p/cratermaker
    permissions:
      id-token: write
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true
