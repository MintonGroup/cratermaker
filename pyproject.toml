[project]
name = "cratermaker"
dynamic = ["version"]
authors=[
    {name = 'David A. Minton', email='daminton@purdue.edu'},
]
maintainers = [
    {name = 'David A. Minton', email='daminton@purdue.edu'},
]

readme = "README.md"
requires-python=">=3.10"
license={file = "LICENSE"}
classifiers=[
'Development Status :: 3 - Alpha',
'Intended Audience :: Science/Research',
'Topic :: Scientific/Engineering :: Astronomy',
'License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)',
'Programming Language :: Python :: 3',
'Programming Language :: Fortran',
'Operating System :: MacOS',
'Operating System :: POSIX :: Linux',
]
keywords=['astronomy','astrophysics', 'planetary', 'monte carlo',  'moon', 'landscape evolution']
dependencies = [
    'numpy',
    'xarray>=2024.10.0',
    'uxarray>=2024.10.1',
    'scipy',
    'matplotlib',
    'vtk',
    'tqdm'
]

[project.optional-dependencies]
meshing = [
    'jigsaw',
    'jigsawpy',
    'mpas_tools'
]

[project.urls]
Repository = 'https://github.com/MintonGroup/cratermaker'

[build-system]
requires = [
    'cython>=3',
    'numpy',
    'scikit-build-core',
    'setuptools>=64', 
    'setuptools_scm>=8'
]
build-backend = "scikit_build_core.build"

[tool.scikit-build]
cmake.version = ">=3.23.1"
ninja.version = ">=1.11.1"
build-dir = "build/{wheel_tag}"
sdist.include = ["cratermaker/**/*.py"]
cmake.verbose = true
metadata.version.provider = "scikit_build_core.metadata.setuptools_scm"

[tool.setuptools_scm]  
write_to = "cratermaker/_version.py"

[tool.cibuildwheel]
test-command = "pytest {package}/tests"
test-requires = ['pytest']
skip = "pp* *i686 *-manylinux_i686 *_ppc64le *_s390x *-musllinux* *-win32"
build-verbosity = 1

[tool.cibuildwheel.macos.environment]
ROOT_DIR="$(pwd)"
MACOSX_DEPLOYMENT_TARGET="$(sw_vers -productVersion)"
PREFIX="/usr/local"
HOMEBREW_PREFIX="$(brew --prefix)"
ARCH="$(uname -m)"
GFORTRAN_VERSION="$(buildscripts/get_gfortran_version.sh)"
FC="$(buildscripts/get_gfortran_path.sh)"
F77="${FC}"
CC="/usr/bin/clang"
CXX="/usr/bin/clang++"
CPP="/usr/bin/cpp"
AR="/usr/bin/ar"
NM="/usr/bin/nm"
RANLIB="/usr/bin/ranlib"
LD_LIBRARY_PATH="${PREFIX}/lib:${HOMEBREW_PREFIX}/lib:${HOMEBREW_PREFIX}/lib/gcc/${GFORTRAN_VERSION}"
DYLD_LIBRARY_PATH="${LD_LIBRARY_PATH}"
REPAIR_LIBRARY_PATH="${LD_LIBRARY_PATH}"
LDFLAGS="-Wl,-no_compact_unwind -L${PREFIX}/lib -L${HOMEBREW_PREFIX}/lib -L${HOMEBREW_PREFIX}/lib/gcc/${GFORTRAN_VERSION}" 
CPATH="${HOMEBREW_PREFIX}/include:/usr/local/include:${PREFIX}/include:${ROOT_DIR}/include"
CPPFLAGS="-isystem ${HOMEBREW_PREFIX}/include -isystem ${PREFIX}/include -isystem /usr/local/include"
LIBS="-lomp"
FCFLAGS="-mmacos-version-min=${MACOSX_DEPLOYMENT_TARGET} -arch ${ARCH}"
FFFLAGS="${FCFLAGS}"
CFLAGS="${FCFLAGS} -Wno-deprecated-non-prototype -arch ${ARCH}"
CXXFLAGS="${CFLAGS}"

[tool.cibuildwheel.linux.environment]
SKBUILD_CMAKE_ARGS=["-DMACHINE_CODE_VALUE=generic"]
PREFIX="/usr/local"
NCDIR="${PREFIX}"
LD_LIBRARY_PATH="${PREFIX}/lib:/project/lib}"
CPATH="${PREFIX}/include:/project/include}"
CMAKE_INSTALL_LIBDIR="lib"
CC="$(command -v gcc)"
CXX="$(command -v g++)"
FC="$(buildscripts/get_gfortran_path.sh)"

[tool.cibuildwheel.macos]
before-all = [
    "brew install coreutils vecLibFort cmake",
]

[tool.cibuildwheel.linux]
skip = "pp* -manylinux_i686* *-musllinux*"
before-all = [
    "yum install epel-release -y",
    "yum install libcurl-devel -y",
]


